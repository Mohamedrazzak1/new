pipeline {
    agent any
    environment {
        // Define your AWS region and ECR repository URL
        dockerImage = "webapp01"
        dockerrepo = "dineshdkr"
    }  
    stages {
        stage('Maven Build') {
            steps {
                // Maven build
                script {
                    def mvnHome = tool 'maven'
                    def mvnCMD = "${mvnHome}/bin/mvn"
                    sh "${mvnCMD} clean install"
                    // Add additional Maven goals or options as needed
                }
            }
        }
    
        stage('Docker Build') {
            steps {
                script {
                    // Define Docker image name and tag
                    // Build and tag the Docker image
                    sh "docker build -t ${dockerrepo}/${dockerImage}:${env.BUILD_NUMBER} ."  
                    // Push the Docker image to ECR
                    //sh "docker push ${ECR_REPO_URL}:${dockerTag}"
                }
            }
        }
        stage('Docker Image Push') {
            steps {
                script {
                    // Define Docker image name and tag
                    // Build and tag the Docker image
                    withDockerRegistry(credentialsId: 'dockerpass', url: 'https://index.docker.io/v1/')  {
                    sh "docker push  ${dockerrepo}/${dockerImage}:${env.BUILD_NUMBER} "  
                    // Push the Docker image to ECR
                    //sh "docker push ${ECR_REPO_URL}:${dockerTag}"
                    }
                }
            }
        }
        stage('Remove Previous Docker Image') {
            steps {
                script {
                    // Define Docker image name
                    def previousTag = env.BUILD_NUMBER.toInteger() - 1
                    // Remove the previous Docker image
                    sh "docker rmi -f ${dockerrepo}/${dockerImage}:${previousTag}"
                }
            }
        }
        stage('Update Kubernetes Deployment YML') {
            steps {
                // Update Kubernetes deployment manifest with dynamic image tag
                script {
                    sh "sed -i 's|image: my-docker-image:latest|image: ${dockerrepo}/${dockerImage}:${previousTag}|' main.yml"
                }
            }
        }

        }
    }
